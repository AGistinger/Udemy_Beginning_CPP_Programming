//Overloading Operators Challenge

-----------------------------------------------

Overload the following operators in the prvoided Mystring class.

To gain experience in overloading operators, you should do this challenge twice.
First, overload the operators using member functions and then in another project overload the same
operators again using non-member functions.

Please do it once using member methods and then again using non-member functions.

Here is a list of some of the operators that you can overload for this class.

-   -unary minus.  Returns the lowercase version fo the object's string. (-s1) - X
==  -returns true if the two strings are equal (s1 == s2) - X
!=  -returns true if the two strings are not equal (s1 != s2) - X
<   -returns true if the lhs string is lexically less than the rhs string (s1 < s2) - X
>   -returns true if the lhs string is lexically greater than the rhs string (s1 > s2) - X
+   -concatenation.  Returns an object that concatenates the lhs and rhs (s1 + s2) - X
+=  =concatenate the rhs string to the lhs string and store the result in the lhs object (s1 += s2) or (s1 = s1 + s2) - X
*   -repeat - results in a string that is copied n times (s2 * 3) ex) s2 = "abc", s1 = s2 * 3, s1 will be "abcabcabc" - X
*=  -repeat the string on the lhs n times and store the result back in the lhs object, Ex) s1 = "abc", s1 *= 4; s1 will be "abcabcabcabc" - X

If you wish to overload the ++ and -- operators remember that they have pre and post versions.

The semantics should be as follows (this shows the member method version):

Mystring &operator++() //pre-increment
{
    //do whatever you want increment to do - maybe make all the characters uppercase?
    return *this;
}
//Note pre-increment returns a reference

//Note that Post-increment returns a Mystring by value not by reference

Mystring operator++(int) //post-increment
{
    Mystring temp (*this); //make copy
    operator++();  //call pre-increment - make sure you call pre-increment!
    return temp;  //return teh old value
}
//Note post-increment returns a value not a reference

Hints:
1. take advantage of the std::strcmp function for the equality operators!
2. the += and *= operators should return a Mystring &
3. rather than duplicate the code int he += and *= functions, use the + and * operators which you have already overloaded
