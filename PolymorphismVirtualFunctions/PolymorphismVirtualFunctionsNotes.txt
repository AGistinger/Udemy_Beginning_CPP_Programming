//Polymorphsim - Virtual Functions

Virtual Functions
-Redefined functions are bound statically
-Overridden functions are bound dynamically
-Virtual functions are overridden
-Allows us to treat all objects generally as objects of the Base class

Declaring Virtual functions
-Declare the function you want to override as virtual in the Base class
-Virtual functions are virtual all the way down the hierarchy fromt his point
-Dynamic polymorphism only via Account class pointer or reference

Example)

class Account
{
public:
    virtual void withdraw(double amount); //Can be overridden by derived classes and will run dynamically at run-time
};

Declaring Virtual Functions
-Override the function in the Derived classes
-Function signature and return type must match EXACTLY
-Virtual keyword not required but is best practice
-If you don't provide an overridden version it is inherited from it's base class

Example)
class Checking : public Account
{
public:
    virual void withdraw(double amount);
};