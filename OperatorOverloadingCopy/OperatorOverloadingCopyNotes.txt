//Operator Overloading

Copy assignment operator (=)

-C++ provides a default assignemnt operator used for assigning one object to another.

    Mystring s1 {"Frank"};
    Mystring s2 = s1;  //Not assignemnt
                                //Same as Mystring s2{s1};
    s2 = s1;    //assignment
    
-Default is memberwise assignment (shallow copy)
    -If we have raw pointer data memeber we must deep copy
    
Overloading the copy assignment operator (deep copy)

    Type &Type :: operator= (const Type &rhs);
    
    Mystring &Mystring :: operator= (const Mystring &rhs);
    
    s2 = s1;    //We write this
    s2.operator = (s1);  //Operator= method is called
    
Overloading the copy assignment operator (deep copy)

    Mystring &Mystring :: operator= (const Mystring &rhs)
    {
        if (this == &rhs)
        return *this);
        
        delete [] str;
        str = new char[std::strlen(rhs.str) + 1];
        std::strcpy(str, rhs.str);
        
        return *this;
    }
    
-Check for self assignment
    if (this == &rhs)   //p1 = p1;
        return *this;       //return current object
        
-Deallocate storage for this->str since we are overwriting it
    delete [] str;
    
-Allocate storage for the deep copy
    str = new char [std::strlen(rhs.str) + 1];
    
-Perform the copy
    std::strcpy (str, rhs.str);
    
-Return the current by reference to allow chain assignment
    return *this;
    
    //s1 = s2 = s3;
    
