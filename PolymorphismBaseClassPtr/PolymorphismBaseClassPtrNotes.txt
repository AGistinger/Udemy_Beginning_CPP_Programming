//Polymorphism - Using a Base Class Pointer

Using a Base class pointer

For dynamic polymorphsim we must have:
    -Inheritance hiearchy
    -Base class pointer or Base class reference
    -Virtual functions
    
Example) Using a Base class pointer

Account *p1 = new Account();
Account *p2 = new Savings();
Account *p3 = new Checking();
Account *p4 = new Trust();

p1->withdraw(1000);  //Account::withdraw
p2->withdraw(1000);  //Savings::withdraw
p3->withdraw(1000);  //Checking::withdraw
p4->withdraw(1000);  //Trust:;withdraw

//delete the pointers

Example) Using a Base class pointer - array

Account *p1 = new Account();
Account *p2 = new Savings();
Account *p3 = new Checking();
Account *p4 = new Trust();

Account *array [] = {p1, p2, p3, p4};

for(auto i = 0; i < 4; ++i)
    {
        array[i]->withdraw(1000);
    }
    
Example) Using a Base class pointer - vector

Account *p1 = new Account();
Account *p2 = new Savings();
Account *p3 = new Checking();
Account *p4 = new Trust();

vector<Account*> accounts {p1, p2, p3, p4};

for(auto acc_ptr : accounts)
    {
        acc_ptr->withdraw();
    }
    
//delete the pointers