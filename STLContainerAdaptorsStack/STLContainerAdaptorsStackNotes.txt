/*The Standard Template Library (STL) - Container Adaptors - Stack

std::stack

-Last-in First-out (LIFO) data structure
-Implemented as an adapter over other STL container
 Can be implemented as a vector, list, or deque
-All operations occur on one end of the stack (top)
-No iterators are supported

#include <stack>

-push - insert an element at the top of the stack
-pop - remove an element from the top of the stack
-top - access the top element of the stack
-empty - is the stack empty?
-size - number of elements in the stack

std::stack - Initialization

    std::stack<int> s;  //deque(default)
    
    std::stack<int, std::vector<int>> s1; //vector
    
    std::stack<int, std::list<int>> s2;  //list
    
    std::stack<int, std::deque<int>> s3;  //deque
    
std::stack - Common Methods

    std::stack<int> s;
    
    s.push(10);  //10
    
    s.push(20); //20 10
    
    s.push(30);  //30 20 10
    
-As elements are pushed in the latest element is added to the top

    //The top() method returns a reference to the element at the top
    std::cout << s.top(); //30
    
    //The pop() method removes the top element
    s.pop();  //30 is removed
    s.pop();  //20 is removed
    
    //The size() method displays the size of the stack
    std::cout << s.size();  //1 
*/